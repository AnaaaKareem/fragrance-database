# Generated by Django 5.2 on 2025-04-09 05:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('house', models.CharField(max_length=100)),
                ('street_name', models.CharField(max_length=100)),
                ('town_city', models.CharField(max_length=50)),
                ('county', models.CharField(max_length=50)),
                ('postcode', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'addresses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('pk', models.CompositePrimaryKey('customer_id', 'product_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
            ],
            options={
                'db_table': 'basket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('dob', models.DateField(db_column='DOB')),
                ('gender', models.CharField(max_length=10)),
                ('email_address', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountRate',
            fields=[
                ('member_type', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('discount_rate', models.FloatField()),
            ],
            options={
                'db_table': 'discount_rate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('pk', models.CompositePrimaryKey('customer_id', 'product_id', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'favourite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GiftCards',
            fields=[
                ('gift_card_num', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('issue_date', models.DateField()),
                ('exp_date', models.DateField()),
                ('redeemed_status', models.IntegerField()),
            ],
            options={
                'db_table': 'gift_cards',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('brand', models.CharField(max_length=50)),
                ('product_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.FloatField()),
                ('gift', models.IntegerField()),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instalments',
            fields=[
                ('pk', models.CompositePrimaryKey('order_id', 'instalment_number', blank=True, editable=False, primary_key=True, serialize=False)),
                ('instalment_number', models.IntegerField()),
                ('instalment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pay_due', models.DateField(blank=True, null=True)),
                ('payment_status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'instalments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('inventory_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('restocking_threshold', models.IntegerField()),
                ('last_restocking_date', models.DateField()),
            ],
            options={
                'db_table': 'inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('end_ren_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'membership',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('pk', models.CompositePrimaryKey('order_id', 'ordered_product', blank=True, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'order_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderRef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'order_ref',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_date', models.DateTimeField()),
                ('order_status', models.CharField(max_length=50)),
                ('order_type', models.CharField(max_length=50)),
                ('payment_method', models.CharField(max_length=50)),
                ('installment', models.IntegerField()),
                ('total_payment', models.FloatField()),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalFragrances',
            fields=[
                ('pk', models.CompositePrimaryKey('product_id', 'size', blank=True, editable=False, primary_key=True, serialize=False)),
                ('size', models.CharField(max_length=20)),
                ('fragrance_family', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=10)),
                ('strength', models.CharField(max_length=20)),
                ('engraving', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'personal_fragrances',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumbers',
            fields=[
                ('phone_number', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'phone_numbers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('pk', models.CompositePrimaryKey('customer_id', 'product_id', 'order_id', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'places',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('image_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.TextField()),
            ],
            options={
                'db_table': 'product_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('pk', models.CompositePrimaryKey('inventory_id', 'product_id', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'product_inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('store_id', models.AutoField(primary_key=True, serialize=False)),
                ('branch_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'store',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HomeFragrances',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='store.products')),
                ('product_type', models.CharField(max_length=50)),
                ('bundle', models.IntegerField()),
            ],
            options={
                'db_table': 'home_fragrances',
                'managed': False,
            },
        ),
    ]
